/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.ufmt.ic.locadora.gui;

import br.ufmt.ic.locadora.exception.RegistroException;
import br.ufmt.ic.locadora.entidade.Funcionario;
import br.ufmt.ic.locadora.util.FabricaDAO;
import br.ufmt.ic.locadora.dao.DoacaoFilmesDAO;
import br.ufmt.ic.locadora.dao.EntidadeDAO;
import br.ufmt.ic.locadora.dao.FuncionarioDAO;
import javax.swing.JOptionPane;
import br.ufmt.ic.locadora.entidade.DoacaoFilmes;
import br.ufmt.ic.locadora.entidade.Entidade;
import br.ufmt.ic.locadora.entidade.Filme;
import br.ufmt.ic.locadora.tablemodel.DoacaoFilmesTableModel;
import java.util.Collection;
import java.util.Map;
import br.ufmt.ic.locadora.dao.FilmeDAO;
import br.ufmt.ic.locadora.dao.GeneroDAO;
import br.ufmt.ic.locadora.entidade.Genero;
import br.ufmt.ic.locadora.util.FabricaTela;
import java.text.ParseException;
import java.text.SimpleDateFormat;

/**
 *
 * @author brunosette
 */
public class DoacaoJPanel extends FabricaTela {

    DoacaoFilmesDAO dao = FabricaDAO.CriarDoacaoFilmesDAO();
    FuncionarioDAO funcionarioDAO = FabricaDAO.CriarFuncionarioDAO();
    FilmeDAO filmeDAO = FabricaDAO.CriarFilmeDAO();
    GeneroDAO generoDAO = FabricaDAO.CriarGeneroDAO();
    EntidadeDAO entidadeDAO = FabricaDAO.CriarEntidadeDAO();

    private DoacaoFilmesTableModel tableModel;
    private boolean editar = false;
    private int linhaSelecionada;
    private DoacaoFilmes chave;

    /**
     * Creates new form DoacaoJPanel
     */
    public DoacaoJPanel() {
        tableModel = new DoacaoFilmesTableModel(dao.listar());

        initComponents();
        funcionariojComboBox = super.setComboFuncionario(funcionariojComboBox);
        entidadejComboBox = super.setComboEntidade(entidadejComboBox);
        generojComboBox = super.setComboGenero(generojComboBox);
        LimpaComboFilme();
    }

    

    private void LimpaComboFilme() {
        filmejComboBox.removeAllItems();
        filmejComboBox.addItem("Esperando ...");
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nomejLabel = new javax.swing.JLabel();
        telefonejLabel = new javax.swing.JLabel();
        emailjLabel = new javax.swing.JLabel();
        limparjButton = new javax.swing.JButton();
        cadastrarjButton = new javax.swing.JButton();
        editarjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        doacaojTable = new javax.swing.JTable();
        excluirjButton = new javax.swing.JButton();
        entidadejComboBox = new javax.swing.JComboBox();
        funcionariojComboBox = new javax.swing.JComboBox();
        filmejComboBox = new javax.swing.JComboBox();
        generojComboBox = new javax.swing.JComboBox();
        nomejLabel1 = new javax.swing.JLabel();
        datajFormattedTextField = new javax.swing.JFormattedTextField();
        nacionalidadejLabel1 = new javax.swing.JLabel();

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createTitledBorder(null, "Doações", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18)))); // NOI18N

        nomejLabel.setText("Filme:");

        telefonejLabel.setText("Entidade:");

        emailjLabel.setText("Funcionario:");

        limparjButton.setText("Limpar");
        limparjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparjButtonActionPerformed(evt);
            }
        });

        cadastrarjButton.setText("Salvar");
        cadastrarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarjButtonActionPerformed(evt);
            }
        });

        editarjButton.setText("Editar");
        editarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarjButtonActionPerformed(evt);
            }
        });

        doacaojTable.setModel(tableModel);
        jScrollPane1.setViewportView(doacaojTable);

        excluirjButton.setText("Excluir");
        excluirjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirjButtonActionPerformed(evt);
            }
        });

        entidadejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        funcionariojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        filmejComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        generojComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        generojComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                generojComboBoxItemStateChanged(evt);
            }
        });

        nomejLabel1.setText("Genero:");

        try {
            datajFormattedTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        nacionalidadejLabel1.setText("Data:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generojComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nomejLabel1)
                                    .addComponent(nomejLabel))
                                .addGap(18, 18, 18)
                                .addComponent(filmejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(telefonejLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(nacionalidadejLabel1)
                                            .addComponent(emailjLabel))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(entidadejComboBox, 0, 132, Short.MAX_VALUE)
                                    .addComponent(funcionariojComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(datajFormattedTextField))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(editarjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(excluirjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(limparjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cadastrarjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(nomejLabel1)
                                .addComponent(generojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(editarjButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(excluirjButton)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nomejLabel)
                                    .addComponent(filmejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(telefonejLabel)
                                    .addComponent(entidadejComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(15, 15, 15)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(emailjLabel)
                                    .addComponent(funcionariojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(datajFormattedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nacionalidadejLabel1))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(limparjButton)
                            .addComponent(cadastrarjButton)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(98, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void limparjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparjButtonActionPerformed
        // TODO add your handling code her
        filmejComboBox.setSelectedIndex(0);
        entidadejComboBox.setSelectedIndex(0);
        funcionariojComboBox.setSelectedIndex(0);
        generojComboBox.setSelectedIndex(0);
        editar = false;

    }//GEN-LAST:event_limparjButtonActionPerformed

    private void cadastrarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarjButtonActionPerformed
        // TODO add your handling code here:
        DoacaoFilmes novo = new DoacaoFilmes();

        if (ValidaCombo(funcionariojComboBox)) {
            novo.setResponsavel((Funcionario) funcionariojComboBox.getSelectedItem());
        } else {
            funcionariojComboBox.grabFocus();
            return;
        }

        if (ValidaCombo(filmejComboBox)) {
            novo.setEntidade((Entidade) entidadejComboBox.getSelectedItem());
        } else {
            entidadejComboBox.grabFocus();
            return;
        }

        if (ValidaCombo(filmejComboBox)){
            novo.setFilme((Filme) filmejComboBox.getSelectedItem());
        }else{
            filmejComboBox.grabFocus();
        }
        
        
        String sData = (String) datajFormattedTextField.getText();

        if (sData != null) {
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
            try {
                novo.setDataDoacao(sdf.parse(sData));
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Data de doação Inválida!");
                datajFormattedTextField.grabFocus();
                return;
            }
        }
        

        try {
            if (editar) {
                dao.alterar(novo);
                JOptionPane.showMessageDialog(this, "Alterado!");
                tableModel.alterar(linhaSelecionada, novo);
            } else {
                dao.inserir(novo);
                JOptionPane.showMessageDialog(this, "Cadastrado!");
                tableModel.adicionar(novo);
            }
            limparjButtonActionPerformed(null);
        } catch (RegistroException erro) {
            JOptionPane.showMessageDialog(this, erro.getMessage());
            entidadejComboBox.grabFocus();
        }


    }//GEN-LAST:event_cadastrarjButtonActionPerformed

    private void editarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarjButtonActionPerformed
        // TODO add your handling code here:

        if (doacaojTable.getSelectedRowCount() == 1) {
            linhaSelecionada = doacaojTable.getSelectedRow();
            DoacaoFilmes selecionado = tableModel.getDoacao(linhaSelecionada);
            
            generojComboBox.setSelectedItem(selecionado.getFilme().getExemplar().getGenero());
            
            filmejComboBox.setSelectedItem(selecionado.getFilme());
            
            entidadejComboBox.setSelectedItem(selecionado.getEntidade());
            funcionariojComboBox.setSelectedItem(selecionado.getResponsavel());
            
            
            SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");

            try {
                datajFormattedTextField.setText(sdf.format(selecionado.getDataDoacao()));
            } catch (NullPointerException erro) {

            }
            
            
            
            funcionariojComboBox.setSelectedItem(selecionado.getResponsavel());
            chave = selecionado;
            editar = true;
        } else {
            JOptionPane.showMessageDialog(this, "Selecione somente 1 linha!");
        }
    }//GEN-LAST:event_editarjButtonActionPerformed

    private void excluirjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirjButtonActionPerformed
        // TODO add your handling code here:
        if (doacaojTable.getSelectedRowCount() > 0) {
            int confirmacao = JOptionPane.showConfirmDialog(doacaojTable, "Confirma a exclusão?");
            if (confirmacao == JOptionPane.YES_OPTION) {
                linhaSelecionada = doacaojTable.getSelectedRow();
                DoacaoFilmes selecionado = tableModel.getDoacao(linhaSelecionada);
                dao.remover(selecionado.getCodigo());
                tableModel.remover(linhaSelecionada, selecionado);
                JOptionPane.showMessageDialog(this, "Excluido com Sucesso!");
                limparjButtonActionPerformed(null);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione ao menos 1 linha!");
        }
    }//GEN-LAST:event_excluirjButtonActionPerformed

    private void generojComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_generojComboBoxItemStateChanged
        // TODO add your handling code here:
        if (generojComboBox.getSelectedIndex() > 0) {
            filmejComboBox = setComboFilme(filmejComboBox, (Genero) generojComboBox.getSelectedItem());
            if (filmejComboBox.getItemCount() < 2){
                filmejComboBox.removeAllItems();
                filmejComboBox.addItem("Sem Dados ...");
            }
        } else {
            LimpaComboFilme();
        }
    }//GEN-LAST:event_generojComboBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cadastrarjButton;
    private javax.swing.JFormattedTextField datajFormattedTextField;
    private javax.swing.JTable doacaojTable;
    private javax.swing.JButton editarjButton;
    private javax.swing.JLabel emailjLabel;
    private javax.swing.JComboBox entidadejComboBox;
    private javax.swing.JButton excluirjButton;
    private javax.swing.JComboBox filmejComboBox;
    private javax.swing.JComboBox funcionariojComboBox;
    private javax.swing.JComboBox generojComboBox;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limparjButton;
    private javax.swing.JLabel nacionalidadejLabel1;
    private javax.swing.JLabel nomejLabel;
    private javax.swing.JLabel nomejLabel1;
    private javax.swing.JLabel telefonejLabel;
    // End of variables declaration//GEN-END:variables
}
